# -*- coding: utf-8 -*-
"""BSinghTest_Data608Final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hRAU-iobdZLs8aRVoRY_ztZCrZqErXrp
"""

!pip install dash
!pip install jupyter-dash
import pandas as pd
import plotly.express as px

covid_data = pd.read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv", dtype={"fips": str})

covid_data['date'] = pd.to_datetime(covid_data['date'])

covid_data['death_rate'] = covid_data['deaths']/covid_data['cases']*100

from urllib.request import urlopen
import json
with urlopen('https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json') as response:
    counties = json.load(response)

fig = px.choropleth(covid_data, geojson=counties, locations='fips', color='death_rate',
                           color_continuous_scale="Viridis",
                           range_color=(0, 8),
                           scope="usa",
                    labels={'death_rate':'Death Rate %'}
                          )
fig.update_layout(margin={"r":0,"t":0,"l":0,"b":0})
fig.show()

covid_data_new = pd.read_csv("https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv", dtype={"fips": str})
covid_data3 = covid_data_new
covid_data3['date'] = pd.to_datetime(covid_data3['date'])
covid_data3['date'] = covid_data3['date'].dt.year

from dash import Dash, dcc, html, Input, Output
import plotly.express as px
import pandas as pd
import numpy as np
import dash
from dash import dcc
#import dash_html_components as html
import plotly.express as px
from jupyter_dash import JupyterDash
from dash.dependencies import Input, Output
from dash import dash_table, Input, Output
from urllib.request import urlopen
import json

app5 = Dash(__name__)
with urlopen('https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json') as response:
    counties = json.load(response)
app5.layout = html.Div(children=[
    html.H1(children='Brian Singh_FinalProject_Data608'),

    html.Div(children='''
        TBD.
    '''),

    dcc.Graph(
        id='graph',
        figure=fig
    ),

    dcc.Slider(
        covid_data3['date'].min(),
        covid_data3['date'].max(),
        step=None,
        id='crossfilter-date-slider',
        value=covid_data['date'].min(),
        marks={str(date): str(date) for date in covid_data3['date'].unique()}
    )
])


@app5.callback(
    Output('graph','figure'),
    Input('crossfilter-date-slider','value'),
)

def covid_map(date_value):
  filter_date = covid_data3[covid_data.date==date_value]
  fig3 = px.choropleth(filter_date, geojson=counties, locations='fips', color='death_rate',
                           color_continuous_scale="Viridis",
                           range_color=(0, 8),
                           scope="usa",labels={'death_rate':'Death Rate %'})
  return fig3.update_layout(margin={"r":0,"t":0,"l":0,"b":0})

if __name__ == '__main__':
    app5.run_server(debug=True)